webpackJsonp([19],{"4i/I":function(n,e,t){"use strict";angular.module("wgGame").run(["$state",function(n){n.go("loading")}])},"7MOm":function(n,e,t){"use strict";angular.module("wgGame").service("MatchGameStrategy",["$rootScope","wgProperties","$timeout","wgWaitSeconds","$q",function(n,e,t,o,a){function i(){var n=y.getProperty("polygons.additional"),e=1+s(n),t=y.getProperty("polygons.rotate");d.leftPolygons=[],d.rightPolygons=[];for(var o=0;o<e;o++){var a=g(s(y.getProperty("polygons.sides")));d.leftPolygons.push(l({points:a}))}var i=d.leftPolygons[0],r=i,u=Math.random()>y.getProperty("polygons.incorrect.probability");u||(Math.randomBoolean()?r=l(r):i=l(i),Math.randomBoolean()&&t&&(Math.randomBoolean()?r=c(r,t):i=c(i,t))),d.leftPolygons[0]=i,d.rightPolygons.push(r),d.currentAnswer=u?"yes":"no"}function s(n){return Math.randInt(n.min,n.max)}function r(n){return n.min+Math.random()*(n.max-n.min)}function g(n){for(var e=[],t=y.getProperty("polygons.radius"),o={x:t,y:t},a={min:t,max:t},i=0;i<n;i++){var s=2*i*Math.PI/n,g=r(a),l={x:Math.floor(o.x+g*Math.sin(s)),y:Math.floor(o.y+g*Math.cos(s)),radius:g,angle:s};e.push(l)}return e}function l(n){var e=y.getProperty("polygons.radius"),t=y.getProperty("polygons.variance"),o=y.getProperty("polygons.radius")*t,a={x:e,y:e};n=angular.copy(n,{});var i=n.points.random();return i.radius=i.radius-o,u(a,i),n}function c(n,e){var t=y.getProperty("polygons.radius"),o={x:t,y:t};n=angular.copy(n,{});var a=Math.randomFromInterval(e)/180*Math.PI;return angular.forEach(n.points,function(n){n.angle+=a,u(o,n)}),n}function u(n,e){e.x=Math.floor(n.x+e.radius*Math.sin(e.angle)),e.y=Math.floor(n.y+e.radius*Math.cos(e.angle))}var p,d,y=e.build();this.buildInitialGameState=function(){return d={init:!1,answer:!1,hidden:!1,leftPolygons:[],rightPolygons:[],currentAnswer:""}},this.buildGameState=function(){return p&&p.resolve(),p=a.defer(),d.answer=d.init,o(.5)().then(function(){return i(),d.init=!0,d.answer=!1,d.hidden=!0,t(function(){return d.hidden=!1},100),d})},this.mapGameStateToAnswer=function(){return d.currentAnswer},this.mapKeyToAnswer=function(n){switch(n){case 39:return"yes";case 37:return"no"}},this.isOver=function(){return!p.promise||p.promise},this.handleAnswerResult=function(n,e){return p.resolve(),!0}}]),angular.module("wgGame").directive("wgSvgPolygon",["$document","$parse",function(n,e){function t(e){return n[0].createElementNS("http://www.w3.org/2000/svg",e)}return{scope:!0,restrict:"A",link:function(n,o,a){for(var i=t("svg"),s=t("polygon"),r=e(a.wgSvgPolygon)(n),g=[],l=0,c=r.length;l<c;l++)g.push(r[l].x+","+r[l].y);s.setAttribute("points",g.join(" ")),i.appendChild(s),o.append(i)}}}])},"8v5g":function(n,e){n.exports=PIXI},HWZb:function(n,e){n.exports=p2},Mr7j:function(n,e){n.exports="<div class=\"game-screen game-screen--polygons\"> <wg-game-answer-yes-no ng-class=\"'game-answer-' + mapGameStateToAnswer()\" on-click=answer(click)></wg-game-answer-yes-no> <div class=polygons ng-class=\"{'game-state-init': !gameState.init, 'game-state-change-figure': gameState.answer}\"> <div class=polygons__inner> <h5 class=\"game-screen__task polygons__instruction\"> {{'game.title'|translate}}</h5> <div class=polygons__container> <div class=polygons__box> <div class=polygons__figure ng-style=\"{visibility: gameState.hidden ? 'hidden' : 'visible'}\" wg-svg-polygon=polygon.points ng-repeat=\"polygon in gameState.leftPolygons track by $id(polygon)\"> </div> </div> <div class=polygons__box> <div class=polygons__figure ng-style=\"{visibility: gameState.hidden ? 'hidden' : 'visible'}\" wg-svg-polygon=polygon.points ng-repeat=\"polygon in gameState.rightPolygons track by $id(polygon)\"> </div> </div> </div> </div> </div> </div> "},RZsl:function(n,e,t){"use strict";var o,a;o=[t("/jXN")],void 0!==(a=function(n){function e(n,e,t,o,a){var i=0;e.gameState=t.buildInitialGameState(),e.answer=function(o){o===e.mapGameStateToAnswer()&&(i++,i>2?n.go("game"):t.buildGameState())},e.$on("keydown",function(n,o){e.answer(t.mapKeyToAnswer(o))}),e.mapGameStateToAnswer=function(){return t.mapGameStateToAnswer()},o(function(){t.buildGameState()},0)}n.module("wgGame").config(["$stateProvider",function(n){n.state("game-training",{views:{pages:{template:t("Mr7j"),controller:["$state","$scope","MatchGameStrategy","$timeout","$document",e]}}})}])}.apply(e,o))&&(n.exports=a)},UOc7:function(n,e,t){"use strict";angular.module("wgGame").config(["$stateProvider",function(n){n.state("game",{views:{pages:{templateUrl:"game-container.html"},"container@game":{template:t("zdZG")}}})}])},abck:function(n,e){},bPGj:function(n,e,t){"use strict";t("/jXN").module("wgGame",["wgCore"]).constant("gameName","polygons")},tzQp:function(n,e){n.exports=Phaser},"yp+a":function(n,e,t){"use strict";t("bPGj"),t("UOc7"),t("7MOm"),t("pRCW"),t("abck"),t("4i/I"),t("RZsl")},zdZG:function(n,e){n.exports='<div ng-controller=GameCtrl class="game-screen game-screen--polygons"> <wg-menu></wg-menu> <wg-answer-result></wg-answer-result> <wg-game-answer-yes-no on-click=answer(click) ng-show="$root.countDown.left == 0"></wg-game-answer-yes-no> <div ui-view=stages></div> <div class=polygons ng-class="{\'game-state-init\': !gameState.init, \'game-state-change-figure\': gameState.answer}"> <div class=polygons__inner> <h5 class="game-screen__task polygons__instruction"> {{\'game.title\'|translate}}</h5> <div class=polygons__container> <div class=polygons__box> <div class=polygons__figure ng-style="{visibility: gameState.hidden ? \'hidden\' : \'visible\'}" wg-svg-polygon=polygon.points ng-repeat="polygon in gameState.leftPolygons track by $id(polygon)"> </div> </div> <div class=polygons__box> <div class=polygons__figure ng-style="{visibility: gameState.hidden ? \'hidden\' : \'visible\'}" wg-svg-polygon=polygon.points ng-repeat="polygon in gameState.rightPolygons track by $id(polygon)"> </div> </div> </div> </div> </div> </div> '}},["yp+a"]);