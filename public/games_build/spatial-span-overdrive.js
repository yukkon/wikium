webpackJsonp([16],{"6oAx":function(e,t,l){"use strict";angular.module("wgGame").config(["$stateProvider",function(e){e.state("game",{views:{pages:{templateUrl:"game-container.html"},"container@game":{template:l("MrWv")}}})}])},"8v5g":function(e,t){e.exports=PIXI},FrUI:function(e,t){},HWZb:function(e,t){e.exports=p2},MrWv:function(e,t){e.exports='<div ng-controller=GameCtrl class="game-screen game-screen--spatial-span"> <wg-menu></wg-menu> <wg-answer-result></wg-answer-result> <div ui-view=stages></div> <div class="spatial-span spatial-span--animation"> <div class=spatial-span__inner ng-if="$root.countDown.left == 0 || gameState.matrix.length > 0" ng-class=gameState.innerClass> <h5 class=game-screen__task ng-style="{visibility: gameState.complete ? \'visible\' : \'hidden\'}" ng-bind-html="\'game.question\'|translate:{color:gameState.color}|translate|capitalize"> </h5> <div class=spatial-span__line ng-repeat="line in gameState.matrix.tiles"> <button class=spatial-span__lamp ng-click=answer(tile) ng-disabled=!tile.enabled ng-class=tile.getClasses() ng-repeat="tile in line"> <svg class=spatial-span__icon viewBox="0 0 62 68" width=62 height=69> <g class=lamp-stroke> <g> <ellipse fill=#fff cx=30.36 cy=60.95 rx=15.67 ry=7.33 /> <polygon fill=#fff points="14.68 57.42 14.68 60.95 18.86 63.3 46.03 60.95 46.03 57.42 14.68 57.42"/> <path fill=#fff d=M46,57.42c0,4-7,7.33-15.67,7.33s-15.67-3.28-15.67-7.33l9.27-6.85H36.76Z /> </g> <rect fill=#fff x=23.16 y=42.08 width=14.38 height=14.03 /> <g> <rect fill=#fff x=15.45 y=34.12 width=3.99 height=12.83 /> <circle fill=#fff cx=17.44 cy=48.44 r=3.19 /> </g> <g> <polygon fill=#fff points="10.31 5.87 -0.26 34.44 60.99 34.44 50.49 5.87 10.31 5.87"/> <ellipse fill=#fff cx=30.4 cy=5.87 rx=20.09 ry=4.94 /> <ellipse fill=#fff cx=30.4 cy=6.83 rx=18.12 ry=3.98 /> <ellipse fill=#fff cx=30.4 cy=34.44 rx=30.66 ry=8.78 /> </g> </g> <g class=lamp-switch> <rect class=lamp-switch-item fill=#17b4ad x=16.5 y=39.49 width=1.89 height=7.45 /> <circle class=lamp-switch-item fill=#17b4ad cx=17.44 cy=48.46 r=2 /> </g> <g class=lamp-body> <ellipse class=lamp-body-item fill=#016a67 cx=30.36 cy=52.08 rx=5.25 ry=2.46 /> <rect class=lamp-body-item fill=#016a67 x=25.18 y=39.8 width=10.35 height=12.49 /> </g> <g class=lamp-bottom> <ellipse class=color-dark fill=#006964 cx=30.36 cy=60.59 rx=12.85 ry=6.01 /> <polygon class=color-dark fill=#006964 points="17.51 57.69 17.51 60.59 20.93 62.52 43.2 60.59 43.2 57.69 17.51 57.69"/> <path class=color-light fill=#1b887e d=M43.2,57.69c0,3.32-5.75,6-12.85,6s-12.85-2.69-12.85-6l7.6-5.61h10.5Z /> </g> <g class=lamp-shade> <polygon class=color-light fill=#8accc8 points="12.13 7.16 2.52 33.14 58.21 33.14 48.67 7.16 12.13 7.16"/> <ellipse class=color-light fill=#8accc8 cx=30.4 cy=33.14 rx=27.88 ry=7.98 /> <ellipse class=color-medium fill=#19b7ad cx=30.4 cy=7.16 rx=18.27 ry=4.49 /> <ellipse class=color-dark fill=#1e8681 cx=30.4 cy=8.03 rx=16.47 ry=3.62 /> </g> </svg> </button> </div> </div> </div> </div> '},QLvA:function(e,t,l){"use strict";l("pPj3"),l("6oAx"),l("iwO7"),l("6Tig"),l("FrUI"),l("U2ad"),l("l93V")},U2ad:function(e,t,l){"use strict";angular.module("wgGame").run(["$state",function(e){e.go("loading")}])},iwO7:function(e,t,l){"use strict";angular.module("wgGame").service("MatchGameStrategy",["wgProperties","wgWaitSeconds","$q","$timeout","wgImagePreloader","wgGameOverOnTime","$rootScope",function(e,t,l,i,a,n,s){function r(e,l){l=l||0;var i=e[l];if(!i)return void c();y?y.then(function(){r(l)}):(i.highlight(),t(.8)().then(function(){i.normal(),r(e,++l)}))}function o(e,t){for(var l=[],i=0;i<t;i++){for(var a=[],n=0;n<e;n++){var s=new h({x:n,y:i});a.push(s)}l.push(a)}return new f(e,t,l)}function c(){u.matrix.asArray().forEach(function(e){e.enabled=!0}),u.complete=!0}function g(){u.matrix.asArray().forEach(function(e){e.enabled=!1})}function p(){u.matrix=null,u.complete=null}function f(e,t,l){this.n=e,this.m=t,this.tiles=l}function h(e){this.index=-1,this.x=e.x,this.y=e.y,this.enabled=!1,this.highlighted=!1,this.answered=!1,this.correctness=!1}var m,u={matrix:null},d=e.build();this.buildInitialGameState=function(){return u={matrix:null,complete:!1},m=l.all([t(d.getProperty("timing.delayBetweenGameStart"))().then()]).then(function(){u.innerClass="spatial-span__inner--animation"}),u};var y,x;s.$on("pause-on",function(){x=l.defer(),y=x.promise}),s.$on("pause-off",function(){y&&x&&(y=null,x.resolve())}),this.buildGameState=function(){var e=d.getProperty("matrix.width"),t=d.getProperty("matrix.height"),a=d.getProperty("items.count"),n=o(e,t),s=n.asArray().shuffle().take(a),c=0;return l.when(m).then(function(){var e=[],t=[],l=0,o=function(){s.forEach(function(l){l.index=c,l.color=Math.random()<.5?"spatial-span__lamp--blue":"spatial-span__lamp--yellow","spatial-span__lamp--blue"===l.color?e.push(l.index):"spatial-span__lamp--yellow"===l.color&&t.push(l.index),c++}),l<50&&(0!==e.length&&0!==t.length||g(),(e[0]>t[t.length-1]||t[0]>e[e.length-1])&&g(),s.length>=6&&s.length<8&&(1===e.length||1===t.length)?g():s.length>=8&&s.length<10&&(e.length<=2||t.length<=2)?g():s.length>=10&&(e.length<=3||t.length<=3)&&g())},g=function(){l++,e=[],t=[],o()};o();var p=function(){u.color="yellow",u.rightAnswers=t},f=function(){u.color="blue",u.rightAnswers=e};u.matrix=n,u.itemsCount=a,u.failCount=0,u.currentIndex=0,e.length<2?p():t.length<2?f():Math.random()<.5?p():f(),i(function(){r(s)},500)})},this.highlight=r,this.createMatrix=o,this.handleAnswer=function(e){if(e.answered)return!1;var i=l.defer(),a=e.index===u.rightAnswers[u.currentIndex];return a?(u.currentIndex++,e.right(),i.resolve(a)):(u.failCount++,e.wrong(),u.matrix.forEachTile(function(e){e.index===u.rightAnswers[u.currentIndex]&&e.highlight()}),t(d.getProperty("timing.delayAfterWrongAnswer"))().then(function(){i.resolve(a)})),i.promise},this.isReadyForNextState=function(){return u.currentIndex>=u.rightAnswers.length||u.failCount>0},this.destroyGameState=function(){return g(),t(d.getProperty("timing.delayForHidingMatrix"))().then(p).then(t(d.getProperty("timing.delayBeforeStartNextLevel")))},this.enableTiles=c,f.prototype.forEachTile=function(e){for(var t=0;t<this.m;t++)for(var l=0;l<this.n;l++)e(this.tiles[t][l])},f.prototype.asArray=function(){var e=[];return this.forEachTile(function(t){e.push(t)}),e},f.prototype.getTile=function(e,t){if(e>=this.x)throw new Error("x out of range");if(t>=this.y)throw new Error("y out of range");return this.tiles[t][e]},h.prototype.getClasses=function(){return(this.highlighted?"spatial-span__lamp--active "+this.color+" ":"")+(this.enabled?"enabled ":"")+(this.answered?this.correctness?"spatial-span__lamp--done":"spatial-span__lamp--error":"")},h.prototype.highlight=function(){this.highlighted=!0},h.prototype.normal=function(){this.highlighted=!1},h.prototype.cleanAnswer=function(){this.answered=!1},h.prototype.wrong=function(){this.answered=!0,this.correctness=!1},h.prototype.right=function(){this.answered=!0,this.correctness=!0}}])},l93V:function(e,t,l){"use strict";var i,a;i=[l("/jXN")],void 0!==(a=function(e){function t(e,t,l,i,a){l.title="game.training_task",l.gameState=null,t.when(i.buildInitialGameState()).then(function(e){function t(i,n){n=n||0,i[n]?(l.$apply(i[n].highlight()),a(function(){l.$apply(i[n].normal()),t(i,++n)},800)):l.$apply(function(){e.matrix.asArray().forEach(function(e){e.enabled=!0}),l.title="game.training_answer"})}l.gameState=e,e.matrix=i.createMatrix(3,3),e.currentIndex=0;var n=e.matrix.asArray().shuffle().take(4),s=0,r=["spatial-span__lamp--yellow","spatial-span__lamp--yellow","spatial-span__lamp--blue","spatial-span__lamp--yellow"];e.rightAnswers=[0,1,3],e.itemsCount=e.rightAnswers.length,n.forEach(function(t){t.index=s,"spatial-span__lamp--yellow"===r[s]?t.yellow=!0:"spatial-span__lamp--blue"===r[s]&&(t.blue=!0),t.getClasses=function(){return{"spatial-span__lamp--active":t.highlighted,"spatial-span__lamp--yellow":t.highlighted&&t.yellow,"spatial-span__lamp--blue":t.highlighted&&t.blue,enabled:t.enabled,"spatial-span__lamp--done":t.answered&&t.correctness,"spatial-span__lamp--error":t.answered&&!t.correctness,"spatial-span__lamp--answer":t.enabled&&!t.answered&&e.rightAnswers[e.currentIndex]===t.index}},s++}),a(function(){t(n)},1e3),e.currentIndex=0}),l.answer=function(t){l.gameState.rightAnswers[l.gameState.currentIndex]===t.index&&(l.gameState.currentIndex++,t.right()),l.gameState.currentIndex===l.gameState.itemsCount&&e.go("game")}}e.module("wgGame").config(["$stateProvider",function(e){e.state("game-training",{views:{pages:{template:l("sLxk"),controller:["$state","$q","$scope","MatchGameStrategy","$timeout",t]}}})}])}.apply(t,i))&&(e.exports=a)},pPj3:function(e,t,l){"use strict";l("/jXN").module("wgGame",["wgCore"]).constant("gameName","spatial-span-overdrive")},sLxk:function(e,t){e.exports='<div class="game-training game-screen game-screen--spatial-span"> <div class="game-screen__task game-training__title" ng-bind-html=title|translate></div> <div class="spatial-span spatial-span--animation"> <div class=spatial-span__inner ng-class=gameState.innerClass> <div class=spatial-span__line ng-repeat="line in gameState.matrix.tiles"> <button class=spatial-span__lamp ng-click=answer(tile) ng-disabled=!tile.enabled ng-class=tile.getClasses() ng-repeat="tile in line"> <svg class=spatial-span__icon viewBox="0 0 62 68" width=62 height=69> <g class=lamp-stroke> <g> <ellipse fill=#fff cx=30.36 cy=60.95 rx=15.67 ry=7.33 /> <polygon fill=#fff points="14.68 57.42 14.68 60.95 18.86 63.3 46.03 60.95 46.03 57.42 14.68 57.42"/> <path fill=#fff d=M46,57.42c0,4-7,7.33-15.67,7.33s-15.67-3.28-15.67-7.33l9.27-6.85H36.76Z /> </g> <rect fill=#fff x=23.16 y=42.08 width=14.38 height=14.03 /> <g> <rect fill=#fff x=15.45 y=34.12 width=3.99 height=12.83 /> <circle fill=#fff cx=17.44 cy=48.44 r=3.19 /> </g> <g> <polygon fill=#fff points="10.31 5.87 -0.26 34.44 60.99 34.44 50.49 5.87 10.31 5.87"/> <ellipse fill=#fff cx=30.4 cy=5.87 rx=20.09 ry=4.94 /> <ellipse fill=#fff cx=30.4 cy=6.83 rx=18.12 ry=3.98 /> <ellipse fill=#fff cx=30.4 cy=34.44 rx=30.66 ry=8.78 /> </g> </g> <g class=lamp-switch> <rect class=lamp-switch-item fill=#17b4ad x=16.5 y=39.49 width=1.89 height=7.45 /> <circle class=lamp-switch-item fill=#17b4ad cx=17.44 cy=48.46 r=2 /> </g> <g class=lamp-body> <ellipse class=lamp-body-item fill=#016a67 cx=30.36 cy=52.08 rx=5.25 ry=2.46 /> <rect class=lamp-body-item fill=#016a67 x=25.18 y=39.8 width=10.35 height=12.49 /> </g> <g class=lamp-bottom> <ellipse class=color-dark fill=#006964 cx=30.36 cy=60.59 rx=12.85 ry=6.01 /> <polygon class=color-dark fill=#006964 points="17.51 57.69 17.51 60.59 20.93 62.52 43.2 60.59 43.2 57.69 17.51 57.69"/> <path class=color-light fill=#1b887e d=M43.2,57.69c0,3.32-5.75,6-12.85,6s-12.85-2.69-12.85-6l7.6-5.61h10.5Z /> </g> <g class=lamp-shade> <polygon class=color-light fill=#8accc8 points="12.13 7.16 2.52 33.14 58.21 33.14 48.67 7.16 12.13 7.16"/> <ellipse class=color-light fill=#8accc8 cx=30.4 cy=33.14 rx=27.88 ry=7.98 /> <ellipse class=color-medium fill=#19b7ad cx=30.4 cy=7.16 rx=18.27 ry=4.49 /> <ellipse class=color-dark fill=#1e8681 cx=30.4 cy=8.03 rx=16.47 ry=3.62 /> </g> </svg> </button> </div> </div> </div> </div> '},tzQp:function(e,t){e.exports=Phaser}},["QLvA"]);